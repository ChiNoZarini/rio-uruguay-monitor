version: '3.8'

services:
  rio-uruguay-monitor:
    build: .
    container_name: rio-uruguay-monitor
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
    volumes:
      # Montar configuraciÃ³n local si existe
      - ./config.json:/app/config.json:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - rio-monitor-network

  # Nginx como proxy reverso (opcional)
  nginx:
    image: nginx:alpine
    container_name: rio-uruguay-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - rio-uruguay-monitor
    restart: unless-stopped
    profiles:
      - production
    networks:
      - rio-monitor-network

networks:
  rio-monitor-network:
    driver: bridge